/*一、常用Loaders介绍:1.处理样式，转成css，如：less-loader, sass-loader2.图片处理，如: url-loader, file-loader。当图片小于多少k的时候 用base64来转化 否则用file-loader产生真实的图片。两个都必须用上。否则超过大小限制的图片无法生成到目标文件夹中3.处理js，将es6或更高级的代码转成es5的代码。如：'@babel/preset-react','@babel/preset-env'	['@babel/plugin-proposal-decorators', {'legacy': true}],	["@babel/plugin-proposal-class-properties", {"loose": true}],	"@babel/plugin-transform-runtime"	babel-loader，babel-preset-es2015，babel-preset-react4.将js模块暴露到全局，如果expose-loader二、常用Plugins介绍:1.html-withimg-loader2.代码热替换, HotModuleReplacementPlugin3.生成html文件，HtmlWebpackPlugin4.将css成生文件，而非内联， MiniCssExtractPlugin （webpack4 用）  / ExtractTextPlugin5.代码丑化，UglifyJsPlugin，开发过程中不建议打开6.多个 html共用一个js文件(chunk)，可用CommonsChunkPlugin7.清理文件夹，Clean8.调用模块的别名ProvidePlugin，例如想在js中用$，如果通过webpack加载，需要将$与jQuery对应起来webpack配置ProvidePlugin后，在使用时将不再需要import和require进行引入，直接使用即可。如配置ap:'src/api/index.js' ,$:'jquery'new webpack.ProvidePlugin({ // 在每个模块之后都注入$,但是拿不到 window.$	 $:'jquery'})9.文件打包分类：css js 图片 打包到对应的文件夹下面，比较清晰10.扩展名简写：extensions：[.vue,.js],alias:别名，$:'jquery'11.使用优化:给打包出来的文件名添加哈希，实现浏览器缓存文件 */